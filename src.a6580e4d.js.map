{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","timerElem","document","querySelector","TimerElemntsId","querySelectorAll","timerId","setInterval","nowtTime","Date","now","getTimeComponents","days","hours","mins","secs","forEach","i","dataset","value","textContent","time","Math","floor","timer","start"],"mappings":";AA+BA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA/BMA,IAAAA,EAAAA,WACoC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC7BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,UAAYC,SAASC,cAAcJ,GACnCK,KAAAA,eAAiB,KAAKH,UAAUI,iBAAiB,UACjDC,KAAAA,QAAU,KAyBvB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAvBI,MAAA,WAAQ,IAAA,EAAA,KACCA,KAAAA,QAAUC,YAAY,WACjBC,IAAAA,EAAWC,KAAKC,MACc,EAAA,EAAKC,kBAAkB,EAAKX,WAAaQ,GAArEI,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC3B,EAAKX,eAAeY,QAAQ,SAAAC,GACA,SAApBA,EAAEC,QAAQC,QAAoBF,EAAEG,YAAcR,GAC1B,UAApBK,EAAEC,QAAQC,QAAqBF,EAAEG,YAAcP,GAC3B,SAApBI,EAAEC,QAAQC,QAAoBF,EAAEG,YAAcN,GAC1B,SAApBG,EAAEC,QAAQC,QAAoBF,EAAEG,YAAcL,MAEvD,OAaX,CAAA,IAAA,oBAXI,MAAA,SAAkBM,GAKP,MAAA,CAAET,KAJIU,KAAKC,MAAMF,EAAQ,OAIjBR,MAHDS,KAAKC,MAAOF,EAAQ,MAAyB,MAGrCP,KAFTQ,KAAKC,MAAOF,EAAQ,KAAoB,KAEzBN,KADfO,KAAKC,MAAOF,EAAQ,IAAc,UAOvD,EA/BMvB,GA4BA0B,EAAQ,IAAI1B,EAAe,CAC7BC,SAAU,WACVC,WAAY,IAAIS,KAAK,4BACzBe,EAAMC","file":"src.a6580e4d.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n    constructor({ selector, targetDate} ) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.timerElem = document.querySelector(selector);\n        this.TimerElemntsId = this.timerElem.querySelectorAll(\".value\");\n        this.timerId = null;\n    }\n    start() {\n        this.timerId = setInterval(() => {\n            const nowtTime = Date.now();\n            const { days, hours, mins, secs } = this.getTimeComponents(this.targetDate - nowtTime);\n            this.TimerElemntsId.forEach(i => {\n                if (i.dataset.value === \"days\") { i.textContent = days }\n                if (i.dataset.value === \"hours\") { i.textContent = hours }\n                if (i.dataset.value === \"mins\") { i.textContent = mins }\n                if (i.dataset.value === \"secs\") { i.textContent = secs }\n            })\n        }, 1000);\n    }\n    getTimeComponents(time) {\n        const days = Math.floor(time / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n        const secs = Math.floor((time % (1000 * 60)) / 1000);\n        return { days, hours, mins, secs };\n    }\n}\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2021, 12:03:45')});\ntimer.start();"]}